-- ======================================================
-- üìå FPS THANHLONG - Mini Spam Button + Anti-Accessories (G√≥c ph·∫£i, chi·ªÅu cao nh·ªè, ph√≠m t·∫Øt)
-- ======================================================

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local playerGui = LocalPlayer:WaitForChild("PlayerGui")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- üîπ X√ìA PH·ª§ KI·ªÜN C·ª¶A B·∫†N
local function removeAllAccessoriesFromCharacter()
    local character = LocalPlayer.Character
    if not character then return end
    for _, item in ipairs(character:GetChildren()) do
        if item:IsA("Accessory") or item:IsA("LayeredClothing")
           or item:IsA("Shirt") or item:IsA("ShirtGraphic")
           or item:IsA("Pants") or item:IsA("BodyColors")
           or item:IsA("CharacterMesh") then
            pcall(function() item:Destroy() end)
        end
    end
end

LocalPlayer.CharacterAdded:Connect(function()
    task.wait(0.1)
    for i = 1, 10 do
        removeAllAccessoriesFromCharacter()
        task.wait(0.1)
    end
end)
if LocalPlayer.Character then
    task.defer(function()
        for i = 1, 10 do
            removeAllAccessoriesFromCharacter()
            task.wait(0.1)
        end
    end)
end

-- üîπ ITEM CHO SPAM
local allowedItems = {
    ["Tung Bat"] = true,
    ["Medusa's Head"] = true,
    ["Laser Cape"] = true,
}

-- üîπ SPAM ITEM
local InventorySpam = {running = false, delay = 0.1}

function InventorySpam:Start()
    if self.running then return end
    self.running = true
    self._stop = false
    task.spawn(function()
        while self.running and not self._stop do
            local backpack = LocalPlayer:FindFirstChild("Backpack")
            if backpack and LocalPlayer.Character then
                for _, tool in ipairs(backpack:GetChildren()) do
                    if not self.running then break end
                    if tool:IsA("Tool") and allowedItems[tool.Name] then
                        tool.Parent = LocalPlayer.Character
                        task.wait(self.delay/2)
                        tool.Parent = backpack
                        task.wait(self.delay/2)
                    end
                end
            else
                task.wait(0.2)
            end
        end
    end)
end

function InventorySpam:Stop()
    self.running = false
    self._stop = true
    local backpack = LocalPlayer:FindFirstChild("Backpack")
    local char = LocalPlayer.Character
    if backpack and char then
        for _, tool in ipairs(char:GetChildren()) do
            if tool:IsA("Tool") then
                tool.Parent = backpack
            end
        end
    end
end

LocalPlayer.CharacterAdded:Connect(function()
    InventorySpam:Stop()
    task.wait(0.2)
    for i = 1, 10 do
        removeAllAccessoriesFromCharacter()
        task.wait(0.1)
    end
end)

-- üîπ ANTI-SPAM ACCESSORIES NG∆Ø·ªúI KH√ÅC
local maxChangePerInterval = 2
local lastCounts = {}

local function countAllAccessories(character)
    if not character then return 0 end
    local count = 0
    for _, obj in ipairs(character:GetChildren()) do
        if obj:IsA("Tool") or obj:IsA("Accessory") or obj:IsA("LayeredClothing") then
            count = count + 1
        end
    end
    return count
end

local function removeAllAccessories(character)
    if not character then return end
    for _, obj in ipairs(character:GetChildren()) do
        if obj:IsA("Tool") or obj:IsA("Accessory") or obj:IsA("LayeredClothing") then
            pcall(function() obj:Destroy() end)
        end
    end
end

local function checkPlayers()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local currentCount = countAllAccessories(player.Character)
            local lastCount = lastCounts[player] or 0

            if currentCount - lastCount > maxChangePerInterval then
                removeAllAccessories(player.Character)
            end

            lastCounts[player] = currentCount
        end
    end
end

Players.PlayerAdded:Connect(function(player)
    lastCounts[player] = 0
    player.CharacterAdded:Connect(function(char)
        task.wait(0.2)
        removeAllAccessories(char)
        lastCounts[player] = countAllAccessories(char)
    end)
end)

Players.PlayerRemoving:Connect(function(player)
    lastCounts[player] = nil
end)

RunService.Heartbeat:Connect(checkPlayers)

-- üîπ GUI MINI BUTTON (G√≥c ph·∫£i, chi·ªÅu cao nh·ªè)
local old = playerGui:FindFirstChild("FPS_THANHLONG_PANEL")
if old then old:Destroy() end

local gui = Instance.new("ScreenGui")
gui.Name = "FPS_THANHLONG_PANEL"
gui.ResetOnSpawn = false
gui.Parent = playerGui

local panel = Instance.new("Frame", gui)
panel.BackgroundColor3 = Color3.fromRGB(28,28,28)
panel.BorderSizePixel = 0
Instance.new("UICorner", panel).CornerRadius = UDim.new(0, 6)
panel.Size = UDim2.new(0, 60, 0, 28) -- chi·ªÅu cao nh·ªè

local btn = Instance.new("TextButton", panel)
btn.Size = UDim2.new(1, 0, 1, 0)
btn.BackgroundTransparency = 1
btn.Text = "SPAM"
btn.Font = Enum.Font.GothamBold
btn.TextColor3 = Color3.fromRGB(255,255,255)
btn.TextSize = 12

local circle = Instance.new("Frame", panel)
circle.Size = UDim2.new(0, 10, 0, 10)
circle.Position = UDim2.new(1, -12, 0.5, -5)
circle.BackgroundColor3 = Color3.fromRGB(255,40,40)
circle.BorderSizePixel = 0
Instance.new("UICorner", circle).CornerRadius = UDim.new(1, 0)

local state = false
local function updateVisual()
    circle.BackgroundColor3 = state and Color3.fromRGB(50,255,60) or Color3.fromRGB(255,40,40)
end

-- üîπ Toggle b·∫±ng n√∫t GUI
btn.MouseButton1Click:Connect(function()
    state = not state
    if state then
        InventorySpam:Start()
    else
        InventorySpam:Stop()
    end
    updateVisual()
end)
updateVisual()

-- üîπ ƒê·∫∑t g√≥c ph·∫£i m√†n h√¨nh
panel.Position = UDim2.new(1, -70, 0, 50) -- c√°ch ph·∫£i 10px, c√°ch tr√™n 50px
panel.AnchorPoint = Vector2.new(0, 0)

-- üîπ Drag panel
local dragging = false
local dragStart, startPos

panel.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or
       input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = panel.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

panel.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or
       input.UserInputType == Enum.UserInputType.Touch then
        if dragging then
            local delta = input.Position - dragStart
            panel.Position = UDim2.new(
                startPos.X.Scale, startPos.X.Offset + delta.X,
                startPos.Y.Scale, startPos.Y.Offset + delta.Y
            )
        end
    end
end)

-- üîπ PH√çM T·∫ÆT ALT TR√ÅI ƒë·ªÉ b·∫≠t/t·∫Øt spam
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.LeftAlt then
        state = not state
        if state then
            InventorySpam:Start()
        else
            InventorySpam:Stop()
        end
        updateVisual()
    end
end)
